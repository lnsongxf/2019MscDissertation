#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug  6 18:36:25 2019

@author: valler
"""
import pandas as pd
from scipy.stats import kurtosis
from statsmodels.tsa.stattools import adfuller as ADF
from statsmodels.tsa.stattools import kpss as KPSS
import matplotlib.pyplot as plt


#===============================================================
   #print()
#===============================================================
def println(title,cont):
    print()
    print("===================================")
    print("===================================")
    print("This is the result of %s" %(title))
    print('-----------------------------------')
    print(cont)
    print("===================================")
    print("===================================")
    print()
    return;
    
#===============================================================
    #originplot()
#===============================================================
def originplot(columnx,p,q): 
    #p is the starting forecast point, q is the end of the data
    #p=169 q=241 for original data
    #p=166 q=238 for after diff
    
    dxx=info_all[columnx]#.diff().dropna()
    dx=dxx[df[0]:df[p]]
    Ddatax=dxx[df[p+1]:df[q]]
    Ddatax=Ddatax.to_frame()
    Ddatax.columns =['forecast period']
    ax1=dx.plot()
    Ddatax.plot(color='orange',ax=ax1,title=columnx)
    return;
#===============================================================
#contractplot() 对比
#===============================================================
def cplot(tit):
    a=[columnx,columny,columnz,columnn]    
    i=0
    while i<4:
        
        org=info_org[a[i]]
        org=org.to_frame()
        org.coclumns=[a[i]]
        ax1 = org.ix['2001-06-01':'2019-06-01'].plot()
        
        dx=info_all[a[i]+' Fore']
        dx=dx.to_frame()
        dx.columns=[a[i]+' Fore']
        dx.plot(color='orange',ax=ax1,title= tit+'Forecast')
        i=i+1
#===============================================================
#dplot() double Y aixs of original data and processed data
#===============================================================
def dplot():
    #a=['CMRMTSPLx','GDPCTPI','FEDFUNDS','INDPRO']#columnx,columny,columnz,columnn
    a=[columnx,columny,columnz,columnn]#
    
    i=0
    while i<4:
        info_org=pd.read_csv('FAVAR_data.csv', parse_dates=True, index_col=0) # get time sequence

        org=info_org[a[i]]# info_org is data processed
        org=org['1959-09-01':'2019-06-01']
        org=org.to_frame()
        org.columns=['Differenced '+a[i]]
        ax=org.plot()
        ax.legend(loc=4)

        ax.set_axisbelow(True)
        ax.minorticks_on()
        ax.grid(which='major')
        ax.grid(which='minor', linestyle=':', linewidth='0.5', color='black')        
        
        dx=info_all[a[i]] #real orginal data
        dx=dx['1959-09-01':'2019-06-01']
        dx=dx.to_frame()
        dx.columns=['Original '+a[i]]
        ax1=ax.twinx() #twinx
        #ax.set_ylabel('Differenced '+a[i])
        #ax1.set_ylabel('Original '+a[i])
        ax1.legend(loc=3)
        dx.plot(color='orange',ax=ax1,title= a[i])
        
        lines, labels = ax.get_legend_handles_labels()
        lines2, labels2 = ax1.get_legend_handles_labels()
        ax1.legend(lines + lines2, labels + labels2, loc=0)

        i=i+1
    return;
       
      
        
#===============================================================
    #datadescribe()
#===============================================================
def datadescribe(column):
   Dx=info_all[column]
   #count,mean,std
   Dx_f=Dx.to_frame()
   des=Dx_f.describe() #df type,including count,mean,std,min,25%,50%,75%,max
   des.drop(index=['25%','50%','75%'],inplace=True)
   
   #skew()
   skew=Dx.skew()
   skew=pd.Series({column:skew},name='skewness')
   des=des.append(skew)
   
   #kurtosis
   kur=kurtosis(Dx)
   kur=pd.Series({column:kur},name='kurtosis')
   des=des.append(kur)
   
   #ADF
   adf=ADF(Dx)
   adf=adf[0]#adf value
   adf=pd.Series({column:adf},name='ADF')
   des=des.append(adf)
   
   #KPSS
   kpss=KPSS(Dx)
   kpss=kpss[0]
   kpss=pd.Series({column:kpss},name='KPSS')
   des=des.append(kpss)
   #print
   println('Descrption',des)
   
   return des;

#===============================================================
#=============================================================== 

#filename='BMA_ModelAveraging.csv' #'Diff_result.csv' '2019-07.csv'
filename='2019-07.csv'


info_all = pd.read_csv(filename, parse_dates=True, index_col=0)

info_org=pd.read_csv('Diff_result.csv', parse_dates=True, index_col=0) # get time sequence
df=info_all.index




#----------------
columnx='PCECC96'
columny='GDPC1'
columnz='CPIAUCSL'
columnn='PPIACO' 
#----------------

column=columnx #controller

#originplot(column,0,72) #166,238  #0,73  
#des=datadescribe(column)

#cplot('BMA')
#des.to_csv('descrption'+column+'.csv')

#guide for using  dplot()
#filename='2019-07.csv'
#dplot()

#===============================================================
#===============================================================
#originplot(columnx) --

